
% main script that loads up GRP file data and converts into arrayData struct which is a matlab representation of the
% GPR and experimental meta-data (ptids, slideNames etc.). This script should be used to create copies, each of which
% is for a given project. The script can load data from multiple experiments, so no need to create a new copy of this
% for every run, just for every project.

clear all;
close all;

%-------------------------------------------------------------------------------------------------------------------------------------%
% Parameters that must be set - Paths, dates etc. These need to be setup. As more dates are added simply add these to the list here
%-------------------------------------------------------------------------------------------------------------------------------------%
projectName = 'Dengue';

rootPath = [filesep,'Volumes',filesep,'viddshared',filesep,'HertzLab',filesep]; % main rootPath under which data is located 
savePath = [rootPath,'ArrayData',filesep,projectName,filesep];
loadPath = savePath;

experimentDates = {'07_06_2013','18_06_2013'}; %dates of experiments, each one is a directory where GPR files are saved.
expPrefix    = {'dengue_zm_07_06_13_','dengue_zm_06_18_13_'}; % all slides and slideToSampleMapping file for each date have the exact same filePrefix

fileSuffix = ''; % deprcated option to have a suffix to the name - we no longer allow this in the current naming format.

%-------------------------------------------------------------------------------%
% Additional parameters - project specific
%-------------------------------------------------------------------------------%
numArrays                = 1; %number of arrays on each slide.
typeFlag                 = 'median'; % uses the median over replicates of an antigen. Can also be 'mean'
colorFlags               = {'635'};
colorTags                = {'IgG'};
switchIDs_and_Names_Flag = 0; % old flag for problem with Scrips GPR files, deprecated
commentFlag              = 1; % slide to sample mapping contain a comment column. Current default, used for backward compatbility
fontSize                 = 16;
expGroups                = {'pre','post','mAb'};
yLims                    = [0 25000];
minThreshold             = 10000; %minimal threshold for peak responses, used by findPeaks.

%load Dengue peptide info
[pepData]   = readDengueNicaragua_PeptideData(rootPath);
Dengue1Inds = strmatch('DEN1',{pepData.strain});
Dengue2Inds = strmatch('DEN2',{pepData.strain});
Dengue3Inds = strmatch('DEN3',{pepData.strain});

Dengue1EnvInds = strmatch('DEN1|Env',{pepData.strain});
Dengue2EnvInds = strmatch('DEN2|Env',{pepData.strain});
Dengue3EnvInds = strmatch('DEN3|Env',{pepData.strain});
%-------------------------------------------------------------------------------%

figInd = 3;
for i=1:length(experimentDates)
  mappingFilename = [loadPath,experimentDates{i},filesep,expPrefix{i},'SlideToSampleMappings.txt'];
  currLoadPath    = [loadPath,experimentDates{i},filesep,'GPR',filesep];
  filePrefix      = [expPrefix{i},'slide_'];

  % name of file in which converted data will be stored for future use
  arrayDataFilename = [savePath,experimentDates{i},filesep,expPrefix{i},'arrayData_',typeFlag,'.mat']; 

  load(arrayDataFilename);
 
  slideNames = [arrayData.slideNames];
  ptids      = [arrayData.ptids];
  groupNames = [arrayData.groupNames];
  mPeptResponses      = [arrayData(1).responseMatrix{1}];

  %find peak responses to visually verify these on images:
  
  [peakResps] = findPeakResponses(mPeptResponses,minThreshold);
  
  [figInd] = plotAllResponsesByGroup(mPeptResponses,groupNames,expGroups,'Dengue',figInd,yLims,fontSize);
  [figInd] = plotAllResponsesByPtid(mPeptResponses,ptids,'1651','Dengue',figInd,yLims)
  
%   figure()
%   bar(vietInds(allContactInds),mPeptResponses([monoInds;baselineInds],vietInds(allContactInds))');
%   a = gca;
%   set(a,'FontSize',fontSize);
%   set(a,'yLim',[0 10000]);
%   legend(strrep(ptids([monoInds;baselineInds]),'_',' '));
  
%   figName = [savePath,experimentDates{i},filesep,expPrefix{i},monoNames{j},'_Responses'];
%   printFig(gcf,figName,20,16);
  
  
end

